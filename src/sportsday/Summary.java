/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Summary.java
 *
 * Created on Nov 19, 2013, 9:11:00 AM
 */
package sportsday;

/**
 *
 * @author Administrator
 */
import javax.swing.*;
import java.awt.*;
import java.io.*;
import java.sql.*;

public class Summary extends javax.swing.JFrame {

    int width,length;
    String list[],table[],school[];
    int marks[][],mrkObt[][],total[];
    int l;
    DataInputStream db;
    
    String clas,dataname,conn;
    Connection con;
    Statement st;
    
    String[][] data;
    String sqnce[];
    Image img;
    
    /** Creates new form Summary */
    public Summary() {
        clas="sun.jdbc.odbc.JdbcOdbcDriver";
        dataname="sports.mdb";
        conn="jdbc:odbc:Driver={Microsoft Access Driver (*.mdb)};DBQ="+dataname.trim();
        
        try{
            Class.forName(clas);
            con=DriverManager.getConnection(conn);
            st=con.createStatement();
        }   
        catch(Exception ex){
            JOptionPane.showMessageDialog(this, ex);
        }
        Toolkit tk=Toolkit.getDefaultToolkit();
        img=tk.getImage("dns.jpg");        
        
        initiatelist();
        initiateData();
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new JPanel(){
            public void paintComponent(Graphics g){
                super.paintComponent(g);
                rankList(g);
            }
        };
        jLabel6 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPHead = new JPanel(){
            public void paintComponent(Graphics g){
                super.paintComponent(g);
                head(g);
            }
        };
        jPDisplay = new JPanel(){
            public void paintComponent(Graphics g){
                super.paintComponent(g);
                display(g);
            }
        };
        jPHead1 = new JPanel(){
            public void paintComponent(Graphics g){
                super.paintComponent(g);
                foot(g);
            }
        };
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Summary (Marks)");

        jPanel4.setBackground(new java.awt.Color(204, 204, 204));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 24));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("RANKS");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
            .addComponent(jSeparator3, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(597, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18));
        jLabel2.setForeground(new java.awt.Color(102, 0, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("7TH INTER NOBILIAN YOUTH FESTIVAL 2013");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Host : De Nobili School,CMRI");

        jLabel4.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setText("Designed By RAHUL SINHA (XI-A)");

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel1.setText("Directed by Subhasis Ghosh, WITH Indrojyoti Rano and Bitan");

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 18));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Master Score Sheet");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1358, Short.MAX_VALUE)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 1358, Short.MAX_VALUE)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 1358, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 443, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(39, 39, 39)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel3.setPreferredSize(new java.awt.Dimension(1160, 543));

        jPHead.setBackground(new java.awt.Color(255, 204, 204));
        jPHead.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPHeadLayout = new javax.swing.GroupLayout(jPHead);
        jPHead.setLayout(jPHeadLayout);
        jPHeadLayout.setHorizontalGroup(
            jPHeadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1228, Short.MAX_VALUE)
        );
        jPHeadLayout.setVerticalGroup(
            jPHeadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 38, Short.MAX_VALUE)
        );

        jPDisplay.setBackground(new java.awt.Color(204, 204, 204));
        jPDisplay.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPDisplayLayout = new javax.swing.GroupLayout(jPDisplay);
        jPDisplay.setLayout(jPDisplayLayout);
        jPDisplayLayout.setHorizontalGroup(
            jPDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1228, Short.MAX_VALUE)
        );
        jPDisplayLayout.setVerticalGroup(
            jPDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 541, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPHead, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPHead, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPHead1.setBackground(new java.awt.Color(255, 204, 204));
        jPHead1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPHead1.setPreferredSize(new java.awt.Dimension(1171, 52));

        javax.swing.GroupLayout jPHead1Layout = new javax.swing.GroupLayout(jPHead1);
        jPHead1.setLayout(jPHead1Layout);
        jPHead1Layout.setHorizontalGroup(
            jPHead1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1228, Short.MAX_VALUE)
        );
        jPHead1Layout.setVerticalGroup(
            jPHead1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 38, Short.MAX_VALUE)
        );

        jMenu1.setText("File");
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                position(evt);
            }
        });

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("New Entry");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newEntry(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem3.setText("Position");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                position(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText("Refresh");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Refresh(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 1230, Short.MAX_VALUE)
                    .addComponent(jPHead1, javax.swing.GroupLayout.DEFAULT_SIZE, 1230, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 589, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPHead1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void newEntry(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newEntry
    new sportsday.NewData().setVisible(true);
}//GEN-LAST:event_newEntry

private void Refresh(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Refresh
        try{
            Class.forName(clas);
            con=DriverManager.getConnection(conn);
            st=con.createStatement();
        }   
        catch(Exception ex){
            JOptionPane.showMessageDialog(this, ex);
        }
        
        initiatelist();
        initiateData();
        jPDisplay.repaint();
        jPHead.repaint();
        jPHead1.repaint();
        jPanel4.repaint();
    
}//GEN-LAST:event_Refresh

private void position(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_position
    new sportsday.Rank().setVisible(true);
}//GEN-LAST:event_position
    
    public void head(Graphics g){
        int x=jPHead.getWidth();
        int x1=x/2;
        int y=jPHead.getHeight();
        
        g.setFont(new Font("TIMES NEW ROMAN", Font.BOLD, 16));
        g.drawString("EVENTS", 10, y-3);
        g.drawString("EVENTS", x1+20, y-3);
        g.setFont(new Font("TIMES NEW ROMAN", Font.BOLD, 12));
        for(int i=190,j=0  ; i<=x1 && j<8  ; i+=(x1-140)/9,j++){
            g.drawLine(i, 0, i, y);
            g.drawString(school[j], i+4, y-3);
        }
        g.fillRect(x1, 0, 3, y);
        for(int i=x1+190,j=0;i<=x&&j<8;i+=(x1-140)/9,j++){
            g.drawLine(i, 0, i, y);
            g.drawString(school[j], i+4, y-3);
        }
        
        
    }
    public void foot(Graphics g){
        int x=jPHead.getWidth();
        int x1=x/2;
        int y=jPHead.getHeight();
        
        g.setFont(new Font("TIMES NEW ROMAN", Font.BOLD, 16));
        g.drawString("EVENTS", 10, y-15);
        g.drawString("TOTAL POINTS", x1+20, y-15);
        g.setFont(new Font("TIMES NEW ROMAN", Font.BOLD, 12));
        for(int i=190,j=0  ; i<=x1 && j<8  ; i+=(x1-140)/9,j++){
            g.drawLine(i, 0, i, y);
            g.drawString(school[j], i+4, y-15);
        }
        g.fillRect(x1, 0, 3, y);
        for(int i=x1+190,j=0;i<=x&&j<8;i+=(x1-140)/9,j++){
            g.drawLine(i, 0, i, y);
            g.setFont(new Font("TIMES NEW ROMAN", Font.BOLD, 20));
            g.drawString(String.valueOf(total[j]), i+4, y-15);
            g.setFont(new Font("TIMES NEW ROMAN", Font.BOLD, 10));
        }
        
        
    }
    public void display(Graphics g){
        int x=jPDisplay.getWidth();
        int y=jPDisplay.getHeight();
        int x1=x/2;
        
        g.drawImage(img,0,0,jPDisplay);
        g.setFont(new Font("TIMES NEW ROMAN", Font.PLAIN, 14));
        boolean flag=true;
        for(int i=190,j=0  ; i<=x1 && j<8  ; i+=(x1-140)/9,j++){
            g.drawLine(i, 0, i, y);
            for(int k=0,m=20;k<l/2;k++,m+=(y/(l/2))){
                if(flag){
                    g.drawString(String.valueOf(list[k]), 10, m);
                }
                g.setFont(new Font("TIMES NEW ROMAN", Font.BOLD, 16));
                if(mrkObt[j][k]!=0){
                    g.drawString(String.valueOf(mrkObt[j][k]), i+15, m);
                }
                else{
                    g.drawString("-", i+15, m);
                }
                g.setFont(new Font("TIMES NEW ROMAN", Font.PLAIN, 14));
                    //g.drawString(data[1][1], i+5, m);
            }
            flag=false;
        }
        g.fillRect(x1, 0, 3, y);
        boolean flag2=true;
        for(int i=x1+190,j=0;i<=x&&j<8;i+=(x1-140)/9,j++){
            g.drawLine(i, 0, i, y);
            int m=20;
            for(int k=l/2;k<l;k++,m+=(y/(l-(l/2)))){
                if(flag2){
                    g.drawString(String.valueOf(list[k]), x1+5, m);
                    //if(list[k].equals("4x200 mts.Relay Boys"))
                    if(k==l-16)
                        g.fillRect(x1, m+4, x1, 2);
                }
                g.setFont(new Font("TIMES NEW ROMAN", Font.BOLD, 16));
                if(mrkObt[j][k]!=0)
                    g.drawString(String.valueOf(mrkObt[j][k]), i+15, m);
                else
                    g.drawString("-", i+15, m);
                g.setFont(new Font("TIMES NEW ROMAN", Font.PLAIN, 14));
                    
            }
            /*g.fillRect(x1, m, x1,2);
            g.setFont(new Font("TIMES NEW ROMAN", Font.BOLD, 18));
            g.drawString(String.valueOf(total[j]), i+15, m+40);
            g.setFont(new Font("TIMES NEW ROMAN", Font.BOLD, 18));
            g.drawString("TOTAL", x1+50, m+40);
            g.setFont(new Font("TIMES NEW ROMAN", Font.BOLD, 12));*/
            flag2=false;
        }
    }
    public void rankList(Graphics g){
        g.setFont(new Font("Comic sans MS", Font.BOLD , 14));
        
        for(int i=0;i<8;i++){
            g.setColor(Color.BLACK);
            if(i==0){
                g.setColor(Color.RED);
                g.setFont(new Font("Comic sans MS", Font.BOLD , 16));
            }
            g.drawString(String.valueOf(i+1)+". "+sqnce[i], 10 , 100+i*40);
        }
    }
    void initiatelist(){
        try{
            db=new DataInputStream(new FileInputStream("Schools.txt"));
            int l=Integer.parseInt(db.readLine());
            school=new String[l];
            sqnce=new String[l];
            total=new int[l];
            
            for(int i=0;i<l;i++){
                school[i]=db.readLine().trim();
                sqnce[i]=school[i];
            }
        }catch(Exception ex){
            JOptionPane.showMessageDialog(this, ex);
        }
        try{
            db=new DataInputStream(new FileInputStream("Events.txt"));
            l=Integer.parseInt(db.readLine());
            list=new String[l];
            table=new String[l];
            marks=new int[l][3];
            mrkObt=new int[8][l];
            data=new String[l][3];
            
            for(int i=0;i<8;i++)
                for(int j=0;j<l;j++)
                    mrkObt[i][j]=0;
            
            for(int i=0;i<l;i++){
                String str=db.readLine();
                
                int c=0;
                String s="",s2="";
                for(int j=0;j<str.length();j++)
                {
                    char ch=str.charAt(j);
                    
                    if(ch==','){
                        c++;
                        if(c==1){
                            list[i]=s;
                            table[i]=s2;
                        }
                        else if(c==2)
                            marks[i][0]=Integer.parseInt(s);
                        else if(c==3)
                            marks[i][1]=Integer.parseInt(s);
                        else if(c==4)
                            marks[i][2]=Integer.parseInt(s);
                        s="";
                        continue;
                    }
                    s=s+ch;
                    if((ch>='a'&&ch<='z')||(ch>='A'&&ch<='Z')||(ch>='0'&&ch<='9'))
                    s2=s2+ch;
                }
            }
            
        }catch(Exception ex){
            JOptionPane.showMessageDialog(this, ex);
        }

        
    }
    
    public void initiateData(){
        try{
            ResultSet r;
            for(int i=0;i<l;i++){
                r=st.executeQuery("SELECT * FROM DATA WHERE EVENTS='"+table[i]+"'");
                while(r.next()){
                    data[i][0]=r.getString("FIRST");
                    data[i][1]=r.getString("SECOND");
                    data[i][2]=r.getString("THIRD");
                }
            }
        }catch(Exception ex){
            JOptionPane.showMessageDialog(this, ex);
        }
        for(int i=0;i<l;i++){
                String data11="",data12="",data21="",data22="",data31="",data32="";
                boolean dt1=false,dt2=false,dt3=false;
                for(int m=0;m<data[i][0].length();m++){
                    char ch=data[i][0].charAt(m);
                    if(ch==','){
                        dt1=true;
                        continue;
                    }
                    else if(dt1==false)
                        data11=data11+ch;
                    else if(dt1==true)
                        data12=data12+ch;
                }
                for(int m=0;m<data[i][1].length();m++){
                    char ch=data[i][1].charAt(m);
                    if(ch==','){
                        dt2=true;
                        continue;
                    }
                    else if(dt2==false)
                        data21=data21+ch;
                    else if(dt2==true)
                        data22=data22+ch;
                }
                for(int m=0;m<data[i][2].length();m++){
                    char ch=data[i][2].charAt(m);
                    if(ch==','){
                        dt3=true;
                        continue;
                    }
                    else if(dt3==false)
                        data31=data31+ch;
                    else if(dt3==true)
                        data32=data32+ch;
                }
            for(int j=0;j<school.length;j++){
                if(data11.equalsIgnoreCase(school[j])){
                    mrkObt[j][i]+=marks[i][0];
                }
                if(data12.equalsIgnoreCase(school[j])){
                    mrkObt[j][i]+=marks[i][0];
                }
                if(data21.equalsIgnoreCase(school[j])){
                    mrkObt[j][i]+=marks[i][1];
                }
                if(data22.equalsIgnoreCase(school[j])){
                    mrkObt[j][i]+=marks[i][1];
                }
                if(data31.equalsIgnoreCase(school[j])){
                    mrkObt[j][i]+=marks[i][2];
                }
                if(data32.equalsIgnoreCase(school[j])){
                    mrkObt[j][i]+=marks[i][2];
                }
            }
        }
        for(int i=0;i<8;i++){
            total[i]=0;
            for(int j=0;j<l;j++){
                total[i]+=mrkObt[i][j];
            }
        }
        
        int A[]=new int[total.length];
        for(int i=0;i<8;i++)
            A[i]=total[i];
        for(int i=0;i<8;i++){
            int small=A[i],pos=i;
            for(int j=i;j<8;j++){
                if(A[j]>small){
                    small=A[j];
                    pos=j;
                }
            }
            int tmp=A[i];
            String tmp2=sqnce[i];
            A[i]=A[pos];
            sqnce[i]=sqnce[pos];
            A[pos]=tmp;
            sqnce[pos]=tmp2;
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Summary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Summary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Summary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Summary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Summary().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPDisplay;
    private javax.swing.JPanel jPHead;
    private javax.swing.JPanel jPHead1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator3;
    // End of variables declaration//GEN-END:variables
}
